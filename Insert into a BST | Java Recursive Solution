// Link: https://leetcode.com/explore/challenge/card/october-leetcoding-challenge/559/week-1-october-1st-october-7th/3485/discuss/881544/Insert-into-a-BST-or-Java-Recursive-Solution

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void insertUtil(TreeNode root,TreeNode n){
        if(n.val>root.val){
            if(root.right==null){
                root.right=n;
                return;
            } else{
                insertUtil(root.right,n);
            }
        } else{
            if(root.left==null){
                root.left=n;
                return;
            } else{
                insertUtil(root.left,n);
            }
        }
    }
    
    public TreeNode insertIntoBST(TreeNode root, int val) {
        TreeNode n=new TreeNode(val);
        if(root==null){
            return n;
        }
        insertUtil(root,n);
        return root;
    }
}
