// Link: https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/554/week-1-september-1st-september-7th/3449/discuss/829926/All-Elements-in-Two-BSTs-or-JAVA-solution

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void inorder(TreeNode root,List<Integer> res){
        if(root==null){
            return;
        }
        inorder(root.left,res);
        res.add(root.val);
        inorder(root.right,res);
    }
    
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        List<Integer> res1=new ArrayList<Integer>();
        inorder(root1,res1);
        List<Integer> res2=new ArrayList<Integer>();
        inorder(root2,res2);
        
        List<Integer> res=new ArrayList<Integer>();
        int i=0, j=0;
        int len1=res1.size(), len2=res2.size();
        while(i<len1 && j<len2){
            if(res1.get(i)<=res2.get(j)){
                res.add(res1.get(i));
                i+=1;
            } else{
                res.add(res2.get(j));
                j+=1;
            }
        }
        while(i<len1){
            res.add(res1.get(i));
            i+=1;
        }
        while(j<len2){
            res.add(res2.get(j));
            j+=1;
        }
        return res;
    }
}
